/*
 * Copyright (c) 2010, 2023 BSI Business Systems Integration AG
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */
import {AjaxCallModel, Locale, ObjectModel, ObjectOrModel, Session, UserAgent} from '../index';

export interface SessionModel extends ObjectModel<Session> {
  /**
   * The HTML element that is used by the {@link Desktop} to render its content.
   */
  $entryPoint?: JQuery;

  /**
   * Necessary when multiple UI sessions are managed by the same window (portlet support).
   * Each session's partId must be unique. Default is 0.
   */
  portletPartId?: string;

  /**
   * Identifies the 'client instance' on the UI server. If the property is not set (which is the default case), the clientSessionId is taken from the browser's session storage (per browser window, survives F5 refresh of page).
   * If no clientSessionId can be found, a new one is generated on the server.
   */
  clientSessionId?: string;

  /**
   * If set to true, the stored or passed clientSessionId will be ignored and a new one generated by the server.
   */
  forceNewClientSession?: boolean;

  /**
   * By default, the user agent for the running platform is used. Use this option if you want to set a custom one.
   */
  userAgent?: UserAgent;

  /**
   * If not specified, {@link Locale.DEFAULT} is used.
   */
  locale?: ObjectOrModel<Locale>;

  /**
   * Unless websockets is used, this property turns on (default) or off background polling using an async ajax call together with setTimeout()
   */
  backgroundJobPollingEnabled?: boolean;

  /**
   * Basically added because of Jasmine-tests.
   * When working with async tests that use setTimeout(), sometimes the Jasmine-Maven plug-in fails and aborts the build because there were console errors.
   * These errors always happen in this class. That's why we can skip suppress error handling with this flag.
   */
  suppressErrors?: boolean;

  /**
   * Forces the focus manager to be active or not. If undefined, the value is auto detected by {@link Device}.
   */
  focusManagerActive?: boolean;

  /**
   * Properties of this object are copied to the Session's reconnector instance (see {@link Reconnector}).
   */
  reconnectorOptions?: Record<string, any>;

  /**
   * Properties of this object are copied to all instances of {@link AjaxCall}.
   */
  ajaxCallOptions?: AjaxCallModel;
}
