/*
 * Copyright (c) 2010-2022 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.lookup-box {
  &.alternative > label.top { /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
    padding-bottom: @top-label-border-padding-bottom;
  }

  & > .field > .structure.tree,
  & > .field > .structure.table {
    border: 1px solid @control-border-color;
    border-radius: @control-border-radius;
    background-color: @control-background-color;
    overflow: hidden; /* necessary due to rounded borders and background color*/

    &.alternative {
      border-radius: @control-alternative-border-radius;
    }

    &.no-rows-selected,
    &.no-nodes-selected {
      &:focus,
      &.focused {
        #scout.focus-border();
      }
    }

    & > .table-data > .table-row {
      & > .table-cell {
        border-bottom: 0;
      }

      &.selected::after {
        // Since there is no top border there is no need to increase the size of the selection
        // -> This makes a table row selection as big as a tree node selection
        top: 0;
        height: 100%;
      }

      &.inactive {
        font-style: italic;

        & > .table-cell.last > .text::after {
          content: ' (' var(--inactive-lookup-row-suffix-text) ')';
        }
      }

      // necessary for Scout Classic as row passes the css classes to its cells
      & > .table-cell.last.inactive {
        font-style: italic;

        & > .text::after {
          content: ' (' var(--inactive-lookup-row-suffix-text) ')';
        }
      }
    }

    & > .tree-data > .tree-node.inactive,
    & > .tree-data > .animation-wrapper > .tree-node.inactive {
      font-style: italic;

      & > .text::after {
        content: ' (' var(--inactive-lookup-row-suffix-text) ')';
      }
    }
  }
}
