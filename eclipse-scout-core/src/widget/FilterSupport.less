/*
 * Copyright (c) 2010-2022 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.filter-field {
  position: absolute;
  --filter-field-height: @filter-field-height;
  --filter-field-bottom: @filter-field-bottom;
  --filter-field-max-bottom: calc(~'50% - ' var(--filter-field-height) / 2);
  bottom: min(var(--filter-field-bottom), var(--filter-field-max-bottom));
  right: @filter-field-right;
  height: var(--filter-field-height);
  width: @filter-field-width;
  min-width: @filter-field-min-width;
  max-width: @filter-field-max-width;
  display: flex;
  align-items: center;
  z-index: 3;
  border-radius: @border-radius;
  #scout.drop-shadow();
  background-color: var(--filter-field-background-color);
  opacity: 1;
  visibility: visible;

  // delay the "fade in" transition
  --filter-field-opacity-transition-delay: 100ms;
  // the visibility transition is not a smooth transition but allows to set the value visibility delayed
  // set visibility to visible right before the "fade in" transition starts
  --filter-field-visibility-transition-delay: var(--filter-field-opacity-transition-delay);

  transition: bottom @filter-field-transition-duration ease-in-out,
  right @filter-field-transition-duration ease-in-out,
  height @filter-field-transition-duration ease-in-out,
  width @filter-field-transition-duration ease-in-out,
  min-width @filter-field-transition-duration ease-in-out,
  max-width @filter-field-transition-duration ease-in-out,
  box-shadow @filter-field-transition-duration ease-in-out,
  opacity @filter-field-transition-duration ease-in-out var(--filter-field-opacity-transition-delay),
  visibility 0s var(--filter-field-visibility-transition-delay);

  :not(:hover) > &:not(.focused):not(.focus-inside-widget).empty {
    opacity: 0;
    visibility: hidden;

    // start the "fade out" transition right away
    --filter-field-opacity-transition-delay: 0s;
    // set visibility to hidden right after the "fade out" transition ends
    --filter-field-visibility-transition-delay: calc(@filter-field-transition-duration + var(--filter-field-opacity-transition-delay));
  }

  &::before {
    content: @icon-search;
    #scout.font-icon();
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    bottom: calc((var(--filter-field-height) - @filter-field-icon-size) / 2);
    right: @text-field-icon-margin-x + 1px;
    height: @filter-field-icon-size;
    width: @filter-field-icon-size;
    opacity: 0;
    transition: bottom @filter-field-transition-duration ease-in-out,
    right @filter-field-transition-duration ease-in-out,
    opacity @filter-field-transition-duration ease-in-out;
    font-size: @font-size-plus;
    color: @label-color;
    border-radius: @border-radius;
  }

  &:hover::before {
    background-color: @hover-background-color;
  }

  & > :not(.key-box) {
    opacity: 1;
    transition: opacity @filter-field-transition-duration ease-in-out;
  }

  & > input {
    width: 100%;
    min-height: 100%;
  }

  &.clearable-always:not(.has-text),
  &.clearable-focused:not(.has-text):not(.focused) {
    & > .clear-icon {
      .invisible();
    }
  }

  & > .clear-icon {
    display: flex;
    right: @text-field-icon-margin-x + 1px;
    margin-right: 0;
    transition: right @filter-field-transition-duration ease-in-out,
    opacity @filter-field-transition-duration ease-in-out;
  }

  & > .key-box {
    top: calc(~'50% - ' 22px / 2) !important;
  }

  &:not(.focused).empty {
    --filter-field-bottom: @filter-field-bottom + ((var(--filter-field-height) - @filter-field-icon-size) / 2);
    --filter-field-max-bottom: calc(~'50% - ' @filter-field-icon-size / 2);
    right: @filter-field-right + @text-field-icon-margin-x + 1px;
    height: @filter-field-icon-size;
    width: @filter-field-icon-size;
    min-width: @filter-field-icon-size;
    max-width: @filter-field-icon-size;
    box-shadow: none;
    #scout.backdrop-filter(@background-color: var(--filter-field-transparent-50-background-color), @backdrop-filter: blur(2px), @fallback-background-color: var(--filter-field-transparent-80-background-color));

    &::before {
      bottom: 0;
      right: 0;
      opacity: 1;
    }

    & > :not(.key-box) {
      opacity: 0;
    }

    & > input {
      cursor: pointer;
    }

    & > .clear-icon {
      right: 0;
    }

    & > .key-box.char {
      margin-left: -10px;
      margin-right: -5px;
    }
  }
}

.filter-field-container {
  position: sticky;
  --filter-field-height: @filter-field-height;
  --filter-field-container-top: calc(~'100% - ' @filter-field-bottom);
  --filter-field-container-min-top: calc(~'50% + ' var(--filter-field-height) / 2);
  top: max(var(--filter-field-container-top), var(--filter-field-container-min-top));
  left: calc(~'100% - ' @filter-field-right);
  width: 0;
  height: 0;
  overflow: visible;
  z-index: 3;

  --filter-field-max-width: @filter-field-width;

  &:not(:hover) > .filter-field:not(.focused):not(.focus-inside-widget).empty {
    opacity: 1;
    visibility: visible;

    --filter-field-opacity-transition-delay: 100ms;
    --filter-field-visibility-transition-delay: var(--filter-field-opacity-transition-delay);
  }

  & > .filter-field {
    bottom: 0;
    right: 0;
    max-width: var(--filter-field-max-width);

    :not(:hover) > &:not(.focused):not(.focus-inside-widget).empty {
      opacity: 0;
      visibility: hidden;

      --filter-field-opacity-transition-delay: 0s;
      --filter-field-visibility-transition-delay: calc(@filter-field-transition-duration + var(--filter-field-opacity-transition-delay));
    }

    &:not(.focused).empty {
      bottom: calc((var(--filter-field-height) - @filter-field-icon-size) / 2);
      right: @text-field-icon-margin-x + 1px;
    }
  }
}

@supports not (bottom: min(50%, 42px)) {
  .filter-field-container,
  .filter-field {
    .hidden();
  }
}

.dense .filter-field,
.dense .filter-field-container {
  --filter-field-height: @filter-field-height-dense;
}