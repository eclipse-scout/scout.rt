/*
 * Copyright (c) 2010, 2023 BSI Business Systems Integration AG
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */
SELECT    S_TYPE,
          SUM,
( CASE WHEN S_MONTH >= ADD_MONTHS ( :from , 0 ) AND S_MONTH < ADD_MONTHS ( :to , 0 ) THEN S_COUNT ELSE 0 END ) , SUM ( CASE WHEN S_MONTH >= ADD_MONTHS ( :from , - 12 ) AND S_MONTH < ADD_MONTHS ( :to , - 12 ) THEN S_COUNT ELSE 0 END ) , SUM ( CASE WHEN S_MONTH >= ADD_MONTHS ( :from , - 24 ) AND S_MONTH < ADD_MONTHS ( :to , - 24 ) THEN S_COUNT ELSE 0 END ) FROM ( SELECT ::text(VisitsTakenPlace) S_TYPE , TRUNC ( EVT_START , 'MONTH' ) S_MONTH , COUNT ( 1 ) S_COUNT , 1 S_SORT FROM ORS_VISIT WHERE USER_NR = :userNr AND STATUS_UID = 3513 AND TYPE_UID = 349616 AND ( ( EVT_START >= ADD_MONTHS ( :from , 0 ) AND EVT_START < ADD_MONTHS ( :to , 0 ) ) OR ( EVT_START >= ADD_MONTHS ( :from , - 12 ) AND EVT_START < ADD_MONTHS ( :to , - 12 ) ) OR ( EVT_START >= ADD_MONTHS ( :from , - 24 ) AND EVT_START < ADD_MONTHS ( :to , - 24 ) ) ) GROUP BY TRUNC ( EVT_START , 'MONTH' ) UNION SELECT ::text(PhonesTakenPlace) , TRUNC ( EVT_START , 'MONTH' ) S_MONTH , COUNT ( 1 ) S_COUNT , 2 S_SORT FROM ORS_VISIT WHERE USER_NR = :userNr AND STATUS_UID = 3513 AND TYPE_UID = 129452 AND ( ( EVT_START >= ADD_MONTHS ( :from , 0 ) AND EVT_START < ADD_MONTHS ( :to , 0 ) ) OR ( EVT_START >= ADD_MONTHS ( :from , - 12 ) AND EVT_START < ADD_MONTHS ( :to , - 12 ) ) OR ( EVT_START >= ADD_MONTHS ( :from , - 24 ) AND EVT_START < ADD_MONTHS ( :to , - 24 ) ) ) GROUP BY TRUNC ( EVT_START , 'MONTH' ) UNION SELECT ::text(TasksCompleted) , TRUNC ( EVT_PLANNED , 'MONTH' ) S_MONTH , COUNT ( * ) S_COUNT , 3 S_SORT FROM ORS_TASK WHERE USER_NR = :userNr AND EVT_DONE IS NOT NULL AND ( ( EVT_PLANNED >= ADD_MONTHS ( :from , 0 ) AND EVT_PLANNED < ADD_MONTHS ( :to , 0 ) ) OR ( EVT_PLANNED >= ADD_MONTHS ( :from , - 12 ) AND EVT_PLANNED < ADD_MONTHS ( :to , - 12 ) ) OR ( EVT_PLANNED >= ADD_MONTHS ( :from , - 24 ) AND EVT_PLANNED < ADD_MONTHS ( :to , - 24 ) ) ) GROUP BY TRUNC ( EVT_PLANNED , 'MONTH' ) UNION SELECT ::text(Registrations) , TRUNC ( EVT_CHANGE , 'MONTH' ) S_MONTH , COUNT ( * ) S_COUNT , 4 S_SORT FROM ORS_CHANGE_HISTORY WHERE USER_NR = :userNr AND TYPE_UID = 75966 AND ( ( EVT_CHANGE >= ADD_MONTHS ( :from , 0 ) AND EVT_CHANGE < ADD_MONTHS ( :to , 0 ) ) OR ( EVT_CHANGE >= ADD_MONTHS ( :from , - 12 ) AND EVT_CHANGE < ADD_MONTHS ( :to , - 12 ) ) OR ( EVT_CHANGE >= ADD_MONTHS ( :from , - 24 ) AND EVT_CHANGE < ADD_MONTHS ( :to , - 24 ) ) ) GROUP BY TRUNC ( EVT_CHANGE , 'MONTH' ) UNION SELECT ::text(Changes) , TRUNC ( EVT_CHANGE , 'MONTH' ) S_MONTH , COUNT ( * ) S_COUNT , 5 S_SORT FROM ORS_CHANGE_HISTORY WHERE USER_NR = :userNr AND TYPE_UID = 75967 AND ( ( EVT_CHANGE >= ADD_MONTHS ( :from , 0 ) AND EVT_CHANGE < ADD_MONTHS ( :to , 0 ) ) OR ( EVT_CHANGE >= ADD_MONTHS ( :from , - 12 ) AND EVT_CHANGE < ADD_MONTHS ( :to , - 12 ) ) OR ( EVT_CHANGE >= ADD_MONTHS ( :from , - 24 ) AND EVT_CHANGE < ADD_MONTHS ( :to , - 24 ) ) ) GROUP BY TRUNC ( EVT_CHANGE , 'MONTH' ) ) DATA GROUP BY S_TYPE , S_SORT ORDER BY S_SORT INTO :index , :period1 , :period2 , :period3
